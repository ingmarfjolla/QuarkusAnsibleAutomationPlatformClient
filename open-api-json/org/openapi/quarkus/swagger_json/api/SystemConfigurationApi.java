package org.openapi.quarkus.swagger_json.api;


import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider; 
import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;
import org.openapi.quarkus.swagger_json.api.auth.CompositeAuthenticationProvider;
import org.openapi.quarkus.swagger_json.api.auth.AuthenticationPropagationHeadersFactory;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

import jakarta.enterprise.context.ApplicationScoped;

import io.quarkiverse.openapi.generator.annotations.GeneratedClass;
import io.quarkiverse.openapi.generator.annotations.GeneratedMethod;
import io.quarkiverse.openapi.generator.annotations.GeneratedParam;

/**
  * Ansible Automation Platform controller API
  * <p/>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  */
@Path("/api/v2")
@RegisterRestClient(baseUri="https://null/", configKey="swagger_json")
@GeneratedClass(value="swagger.json", tag = "SystemConfiguration")
@RegisterProvider(CompositeAuthenticationProvider.class)
@RegisterClientHeaders(AuthenticationPropagationHeadersFactory.class)
@ApplicationScoped
public interface SystemConfigurationApi {

    /**
     * List enabled single-sign-on endpoints
     *
     */
    @GET
    @Path("/auth/")
    @GeneratedMethod ("System Configuration_auth_list")
    public void systemConfigurationAuthList(
    );

    @POST
    @Path("/config/attach/")
    @GeneratedMethod ("System Configuration_config_attach_create")
    public void systemConfigurationConfigAttachCreate(
    );

    /**
     *  Install or update an existing license
     *
     *  (_New in Ansible Tower 2.0.0_) Make a POST request to this resource as a super user to install or update the existing license.  The license data itself can be POSTed as a normal json data structure.  (_New in Ansible Tower 2.1.1_) The POST must include a `eula_accepted` boolean element indicating acceptance of the End-User License Agreement.
     *
     */
    @POST
    @Path("/config/")
    @GeneratedMethod ("System Configuration_config_create")
    public void systemConfigurationConfigCreate(
    );

    /**
     *  Delete an existing license
     *
     *  (_New in Ansible Tower 2.0.0_) Make a DELETE request to this resource as a super user to delete the existing license
     *
     */
    @DELETE
    @Path("/config/")
    @GeneratedMethod ("System Configuration_config_delete")
    public void systemConfigurationConfigDelete(
    );

    /**
     * Return various sitewide configuration settings
     *
     */
    @GET
    @Path("/config/")
    @GeneratedMethod ("System Configuration_config_list")
    public void systemConfigurationConfigList(
    );

    @POST
    @Path("/config/subscriptions/")
    @GeneratedMethod ("System Configuration_config_subscriptions_create")
    public void systemConfigurationConfigSubscriptionsCreate(
    );

    /**
     * Make a GET request to this resource to obtain a list all Receptor Nodes and their links.
     *
     */
    @GET
    @Path("/mesh_visualizer/")
    @GeneratedMethod ("System Configuration_mesh_visualizer_list")
    public void systemConfigurationMeshVisualizerList(
    );

    /**
     * Return some basic information about this instance
     *
     *  Everything returned here should be considered public / insecure, as this requires no auth and is intended for use by the installer process.
     *
     */
    @GET
    @Path("/ping/")
    @GeneratedMethod ("System Configuration_ping_list")
    public void systemConfigurationPingList(
    );

}
