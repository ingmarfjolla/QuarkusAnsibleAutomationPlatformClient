package org.openapi.quarkus.swagger_json.api;

import org.openapi.quarkus.swagger_json.model.CredentialTypesCredentialTypesCredentialsCreateRequest;
import org.openapi.quarkus.swagger_json.model.CredentialTypesCredentialTypesUpdateRequest;

import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider; 
import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;
import org.openapi.quarkus.swagger_json.api.auth.CompositeAuthenticationProvider;
import org.openapi.quarkus.swagger_json.api.auth.AuthenticationPropagationHeadersFactory;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

import jakarta.enterprise.context.ApplicationScoped;

import io.quarkiverse.openapi.generator.annotations.GeneratedClass;
import io.quarkiverse.openapi.generator.annotations.GeneratedMethod;
import io.quarkiverse.openapi.generator.annotations.GeneratedParam;

/**
  * Ansible Automation Platform controller API
  * <p/>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  */
@Path("/api/v2/credential_types")
@RegisterRestClient(baseUri="https://null/", configKey="swagger_json")
@GeneratedClass(value="swagger.json", tag = "CredentialTypes")
@RegisterProvider(CompositeAuthenticationProvider.class)
@RegisterClientHeaders(AuthenticationPropagationHeadersFactory.class)
@ApplicationScoped
public interface CredentialTypesApi {

    /**
     *  List Activity Streams for a Credential Type
     *
     *  Make a GET request to this resource to retrieve a list of activity streams associated with the selected credential type.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of activity streams found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more activity stream records.    ## Results  Each activity stream data structure includes the following fields:  * `id`: Database ID for this activity stream. (integer) * `type`: Data type for this activity stream. (choice) * `url`: URL for this activity stream. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `timestamp`:  (datetime) * `operation`: The action taken with respect to the given object(s). (choice)     - `create`: Entity Created     - `update`: Entity Updated     - `delete`: Entity Deleted     - `associate`: Entity Associated with another Entity     - `disassociate`: Entity was Disassociated with another Entity * `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json) * `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string) * `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string) * `object_association`: When present, shows the field name of the role or relationship that changed. (field) * `action_node`: The cluster node the activity took place on. (string) * `object_type`: When present, shows the model on which the role or relationship was defined. (field)    ## Sorting  To specify that activity streams are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/{id}/activity_stream/")
    @GeneratedMethod ("Credential Types_credential_types_activity_stream_list")
    public void credentialTypesCredentialTypesActivityStreamList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create a Credential Type
     *
     *  Make a POST request to this resource with the following credential type fields to create a new credential type:          * `name`: Name of this credential type. (string, required) * `description`: Optional description of this credential type. (string, default=`\"\"`) * `kind`:  (choice, required)     - `net`: Network     - `cloud`: Cloud   * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`) * `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`)
     *
     */
    @POST
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Credential Types_credential_types_create")
    public void credentialTypesCredentialTypesCreate(
        Object data
    );

    /**
     *  Create a Credential for a Credential Type
     *
     *  Make a POST request to this resource with the following credential fields to create a new credential associated with this credential type.          * `name`: Name of this credential. (string, required) * `description`: Optional description of this credential. (string, default=`\"\"`) * `organization`:  (id, default=`None`) * `credential_type`: Specify the type of credential you want to create. Refer to the documentation for details on each type. (id, required)  * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`)
     *
     */
    @POST
    @Path("/{id}/credentials/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Credential Types_credential_types_credentials_create")
    public void credentialTypesCredentialTypesCredentialsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        CredentialTypesCredentialTypesCredentialsCreateRequest data
    );

    /**
     *  List Credentials for a Credential Type
     *
     *  Make a GET request to this resource to retrieve a list of credentials associated with the selected credential type.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of credentials found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more credential records.    ## Results  Each credential data structure includes the following fields:  * `id`: Database ID for this credential. (integer) * `type`: Data type for this credential. (choice) * `url`: URL for this credential. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this credential was created. (datetime) * `modified`: Timestamp when this credential was last modified. (datetime) * `name`: Name of this credential. (string) * `description`: Optional description of this credential. (string) * `organization`:  (id) * `credential_type`: Specify the type of credential you want to create. Refer to the documentation for details on each type. (id) * `managed`:  (boolean) * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json) * `kind`:  (field) * `cloud`:  (field) * `kubernetes`:  (field)    ## Sorting  To specify that credentials are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/{id}/credentials/")
    @GeneratedMethod ("Credential Types_credential_types_credentials_list")
    public void credentialTypesCredentialTypesCredentialsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Delete a Credential Type
     *
     *  Make a DELETE request to this resource to delete this credential type.
     *
     */
    @DELETE
    @Path("/{id}/")
    @GeneratedMethod ("Credential Types_credential_types_delete")
    public void credentialTypesCredentialTypesDelete(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Credential Types
     *
     *  Make a GET request to this resource to retrieve the list of credential types.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of credential types found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more credential type records.    ## Results  Each credential type data structure includes the following fields:  * `id`: Database ID for this credential type. (integer) * `type`: Data type for this credential type. (choice) * `url`: URL for this credential type. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this credential type was created. (datetime) * `modified`: Timestamp when this credential type was last modified. (datetime) * `name`: Name of this credential type. (string) * `description`: Optional description of this credential type. (string) * `kind`:  (choice)     - `ssh`: Machine     - `vault`: Vault     - `net`: Network     - `scm`: Source Control     - `cloud`: Cloud     - `registry`: Container Registry     - `token`: Personal Access Token     - `insights`: Insights     - `external`: External     - `kubernetes`: Kubernetes     - `galaxy`: Galaxy/Automation Hub     - `cryptography`: Cryptography * `namespace`:  (string) * `managed`:  (boolean) * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json) * `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the documentation for example syntax. (json)    ## Sorting  To specify that credential types are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Produces({"application/json"})
    @GeneratedMethod ("Credential Types_credential_types_list")
    public void credentialTypesCredentialTypesList(
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update a Credential Type
     *
     *  Make a PUT or PATCH request to this resource to update this credential type.  The following fields may be modified:          * `name`: Name of this credential type. (string, required) * `description`: Optional description of this credential type. (string, default=`\"\"`) * `kind`:  (choice, required)     - `net`: Network     - `cloud`: Cloud   * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`) * `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`)         For a PATCH request, include only the fields that are being modified.
     *
     */
    @PATCH
    @Path("/{id}/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Credential Types_credential_types_partial_update")
    public void credentialTypesCredentialTypesPartialUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        Object data
    );

    /**
     *  Retrieve a Credential Type
     *
     *  Make GET request to this resource to retrieve a single credential type record containing the following fields:  * `id`: Database ID for this credential type. (integer) * `type`: Data type for this credential type. (choice) * `url`: URL for this credential type. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this credential type was created. (datetime) * `modified`: Timestamp when this credential type was last modified. (datetime) * `name`: Name of this credential type. (string) * `description`: Optional description of this credential type. (string) * `kind`:  (choice)     - `ssh`: Machine     - `vault`: Vault     - `net`: Network     - `scm`: Source Control     - `cloud`: Cloud     - `registry`: Container Registry     - `token`: Personal Access Token     - `insights`: Insights     - `external`: External     - `kubernetes`: Kubernetes     - `galaxy`: Galaxy/Automation Hub     - `cryptography`: Cryptography * `namespace`:  (string) * `managed`:  (boolean) * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json) * `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the documentation for example syntax. (json)
     *
     */
    @GET
    @Path("/{id}/")
    @GeneratedMethod ("Credential Types_credential_types_read")
    public void credentialTypesCredentialTypesRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Retrieve a Credential Type
     *
     *  Make GET request to this resource to retrieve a single credential type record containing the following fields:
     *
     */
    @POST
    @Path("/{id}/test/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Credential Types_credential_types_test_create")
    public void credentialTypesCredentialTypesTestCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        Object data
    );

    /**
     *  Retrieve a Credential Type
     *
     *  Make GET request to this resource to retrieve a single credential type record containing the following fields:
     *
     */
    @GET
    @Path("/{id}/test/")
    @GeneratedMethod ("Credential Types_credential_types_test_read")
    public void credentialTypesCredentialTypesTestRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update a Credential Type
     *
     *  Make a PUT or PATCH request to this resource to update this credential type.  The following fields may be modified:          * `name`: Name of this credential type. (string, required) * `description`: Optional description of this credential type. (string, default=`\"\"`) * `kind`:  (choice, required)     - `net`: Network     - `cloud`: Cloud   * `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`) * `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the documentation for example syntax. (json, default=`{}`)       For a PUT request, include **all** fields in the request.
     *
     */
    @PUT
    @Path("/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Credential Types_credential_types_update")
    public void credentialTypesCredentialTypesUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        CredentialTypesCredentialTypesUpdateRequest data
    );

}
