package org.openapi.quarkus.swagger_json.api;

import org.openapi.quarkus.swagger_json.model.InventoriesInventoriesLabelsCreateRequest;
import org.openapi.quarkus.swagger_json.model.LabelsLabelsPartialUpdateRequest;

import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider; 
import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;
import org.openapi.quarkus.swagger_json.api.auth.CompositeAuthenticationProvider;
import org.openapi.quarkus.swagger_json.api.auth.AuthenticationPropagationHeadersFactory;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

import jakarta.enterprise.context.ApplicationScoped;

import io.quarkiverse.openapi.generator.annotations.GeneratedClass;
import io.quarkiverse.openapi.generator.annotations.GeneratedMethod;
import io.quarkiverse.openapi.generator.annotations.GeneratedParam;

/**
  * Ansible Automation Platform controller API
  * <p/>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  */
@Path("/api/v2/labels")
@RegisterRestClient(baseUri="https://null/", configKey="swagger_json")
@GeneratedClass(value="swagger.json", tag = "Labels")
@RegisterProvider(CompositeAuthenticationProvider.class)
@RegisterClientHeaders(AuthenticationPropagationHeadersFactory.class)
@ApplicationScoped
public interface LabelsApi {

    /**
     *  Create a Label
     *
     *  Make a POST request to this resource with the following label fields to create a new label:          * `name`: Name of this label. (string, required) * `organization`: Organization this label belongs to. (id, required)
     *
     */
    @POST
    @Consumes({"application/json"})
    @GeneratedMethod ("Labels_labels_create")
    public void labelsLabelsCreate(
        InventoriesInventoriesLabelsCreateRequest data
    );

    /**
     *  List Labels
     *
     *  Make a GET request to this resource to retrieve the list of labels.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of labels found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more label records.    ## Results  Each label data structure includes the following fields:  * `id`: Database ID for this label. (integer) * `type`: Data type for this label. (choice) * `url`: URL for this label. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this label was created. (datetime) * `modified`: Timestamp when this label was last modified. (datetime) * `name`: Name of this label. (string) * `organization`: Organization this label belongs to. (id)    ## Sorting  To specify that labels are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @GeneratedMethod ("Labels_labels_list")
    public void labelsLabelsList(
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update a Label
     *
     *  Make a PUT or PATCH request to this resource to update this label.  The following fields may be modified:          * `name`: Name of this label. (string, required) * `organization`: Organization this label belongs to. (id, required)         For a PATCH request, include only the fields that are being modified.
     *
     */
    @PATCH
    @Path("/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Labels_labels_partial_update")
    public void labelsLabelsPartialUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        LabelsLabelsPartialUpdateRequest data
    );

    /**
     *  Retrieve a Label
     *
     *  Make GET request to this resource to retrieve a single label record containing the following fields:  * `id`: Database ID for this label. (integer) * `type`: Data type for this label. (choice) * `url`: URL for this label. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this label was created. (datetime) * `modified`: Timestamp when this label was last modified. (datetime) * `name`: Name of this label. (string) * `organization`: Organization this label belongs to. (id)
     *
     */
    @GET
    @Path("/{id}/")
    @GeneratedMethod ("Labels_labels_read")
    public void labelsLabelsRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update a Label
     *
     *  Make a PUT or PATCH request to this resource to update this label.  The following fields may be modified:          * `name`: Name of this label. (string, required) * `organization`: Organization this label belongs to. (id, required)       For a PUT request, include **all** fields in the request.
     *
     */
    @PUT
    @Path("/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Labels_labels_update")
    public void labelsLabelsUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InventoriesInventoriesLabelsCreateRequest data
    );

}
