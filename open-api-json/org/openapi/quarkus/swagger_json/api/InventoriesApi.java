package org.openapi.quarkus.swagger_json.api;

import org.openapi.quarkus.swagger_json.model.CredentialsCredentialsCopyCreateRequest;
import org.openapi.quarkus.swagger_json.model.GroupsGroupsAdHocCommandsCreateRequest;
import org.openapi.quarkus.swagger_json.model.GroupsGroupsCreateRequest;
import org.openapi.quarkus.swagger_json.model.GroupsGroupsHostsCreateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesConstructedInventoriesCreateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesConstructedInventoriesPartialUpdateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesInventoriesCreateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesInventoriesInventorySourcesCreateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesInventoriesLabelsCreateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesInventoriesPartialUpdateRequest;
import org.openapi.quarkus.swagger_json.model.InventoriesInventoriesVariableDataUpdateRequest;

import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider; 
import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;
import org.openapi.quarkus.swagger_json.api.auth.CompositeAuthenticationProvider;
import org.openapi.quarkus.swagger_json.api.auth.AuthenticationPropagationHeadersFactory;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

import jakarta.enterprise.context.ApplicationScoped;

import io.quarkiverse.openapi.generator.annotations.GeneratedClass;
import io.quarkiverse.openapi.generator.annotations.GeneratedMethod;
import io.quarkiverse.openapi.generator.annotations.GeneratedParam;

/**
  * Ansible Automation Platform controller API
  * <p/>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  */
@Path("/api/v2")
@RegisterRestClient(baseUri="https://null/", configKey="swagger_json")
@GeneratedClass(value="swagger.json", tag = "Inventories")
@RegisterProvider(CompositeAuthenticationProvider.class)
@RegisterClientHeaders(AuthenticationPropagationHeadersFactory.class)
@ApplicationScoped
public interface InventoriesApi {

    /**
     *  Create an Inventory
     *
     *  Make a POST request to this resource with the following inventory fields to create a new inventory:          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required)  * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`) * `source_vars`: The source_vars for the related auto-created inventory source, special to constructed inventory. (string, default=`\"\"`) * `update_cache_timeout`: The cache timeout for the related auto-created inventory source, special to constructed inventory (integer, default=`None`) * `limit`: The limit to restrict the returned hosts for the related auto-created inventory source, special to constructed inventory. (string, default=`\"\"`) * `verbosity`: The verbosity level for the related auto-created inventory source, special to constructed inventory (integer, default=`None`)
     *
     */
    @POST
    @Path("/constructed_inventories/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_constructed_inventories_create")
    public void inventoriesConstructedInventoriesCreate(
        InventoriesConstructedInventoriesCreateRequest data
    );

    /**
     *  Delete an Inventory
     *
     *  Make a DELETE request to this resource to delete this inventory.
     *
     */
    @DELETE
    @Path("/constructed_inventories/{id}/")
    @GeneratedMethod ("Inventories_constructed_inventories_delete")
    public void inventoriesConstructedInventoriesDelete(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Inventories
     *
     *  Make a GET request to this resource to retrieve the list of inventories.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of inventories found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more inventory records.    ## Results  Each inventory data structure includes the following fields:  * `id`: Database ID for this inventory. (integer) * `type`: Data type for this inventory. (choice) * `url`: URL for this inventory. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this inventory was created. (datetime) * `modified`: Timestamp when this inventory was last modified. (datetime) * `name`: Name of this inventory. (string) * `description`: Optional description of this inventory. (string) * `organization`: Organization containing this inventory. (id) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory.     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `variables`: Inventory variables in JSON or YAML format. (json) * `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean) * `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer) * `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer) * `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer) * `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean) * `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer) * `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer) * `pending_deletion`: Flag indicating the inventory is being deleted. (boolean) * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean) * `source_vars`: The source_vars for the related auto-created inventory source, special to constructed inventory. (string) * `update_cache_timeout`: The cache timeout for the related auto-created inventory source, special to constructed inventory (integer) * `limit`: The limit to restrict the returned hosts for the related auto-created inventory source, special to constructed inventory. (string) * `verbosity`: The verbosity level for the related auto-created inventory source, special to constructed inventory (integer)    ## Sorting  To specify that inventories are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/constructed_inventories/")
    @GeneratedMethod ("Inventories_constructed_inventories_list")
    public void inventoriesConstructedInventoriesList(
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update an Inventory
     *
     *  Make a PUT or PATCH request to this resource to update this inventory.  The following fields may be modified:          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required)  * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`) * `source_vars`: The source_vars for the related auto-created inventory source, special to constructed inventory. (string, default=`\"\"`) * `update_cache_timeout`: The cache timeout for the related auto-created inventory source, special to constructed inventory (integer, default=`None`) * `limit`: The limit to restrict the returned hosts for the related auto-created inventory source, special to constructed inventory. (string, default=`\"\"`) * `verbosity`: The verbosity level for the related auto-created inventory source, special to constructed inventory (integer, default=`None`)         For a PATCH request, include only the fields that are being modified.
     *
     */
    @PATCH
    @Path("/constructed_inventories/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_constructed_inventories_partial_update")
    public void inventoriesConstructedInventoriesPartialUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InventoriesConstructedInventoriesPartialUpdateRequest data
    );

    /**
     *  Retrieve an Inventory
     *
     *  Make GET request to this resource to retrieve a single inventory record containing the following fields:  * `id`: Database ID for this inventory. (integer) * `type`: Data type for this inventory. (choice) * `url`: URL for this inventory. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this inventory was created. (datetime) * `modified`: Timestamp when this inventory was last modified. (datetime) * `name`: Name of this inventory. (string) * `description`: Optional description of this inventory. (string) * `organization`: Organization containing this inventory. (id) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory.     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `variables`: Inventory variables in JSON or YAML format. (json) * `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean) * `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer) * `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer) * `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer) * `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean) * `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer) * `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer) * `pending_deletion`: Flag indicating the inventory is being deleted. (boolean) * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean) * `source_vars`: The source_vars for the related auto-created inventory source, special to constructed inventory. (string) * `update_cache_timeout`: The cache timeout for the related auto-created inventory source, special to constructed inventory (integer) * `limit`: The limit to restrict the returned hosts for the related auto-created inventory source, special to constructed inventory. (string) * `verbosity`: The verbosity level for the related auto-created inventory source, special to constructed inventory (integer)
     *
     */
    @GET
    @Path("/constructed_inventories/{id}/")
    @GeneratedMethod ("Inventories_constructed_inventories_read")
    public void inventoriesConstructedInventoriesRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update an Inventory
     *
     *  Make a PUT or PATCH request to this resource to update this inventory.  The following fields may be modified:          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required)  * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`) * `source_vars`: The source_vars for the related auto-created inventory source, special to constructed inventory. (string, default=`\"\"`) * `update_cache_timeout`: The cache timeout for the related auto-created inventory source, special to constructed inventory (integer, default=`None`) * `limit`: The limit to restrict the returned hosts for the related auto-created inventory source, special to constructed inventory. (string, default=`\"\"`) * `verbosity`: The verbosity level for the related auto-created inventory source, special to constructed inventory (integer, default=`None`)       For a PUT request, include **all** fields in the request.
     *
     */
    @PUT
    @Path("/constructed_inventories/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_constructed_inventories_update")
    public void inventoriesConstructedInventoriesUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InventoriesConstructedInventoriesCreateRequest data
    );

    /**
     *  List Users
     *
     *  Make a GET request to this resource to retrieve the list of users.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of users found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more user records.    ## Results  Each user data structure includes the following fields:  * `id`: Database ID for this user. (integer) * `type`: Data type for this user. (choice) * `url`: URL for this user. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this user was created. (datetime) * `modified`: Timestamp when this user was last modified. (datetime) * `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string) * `first_name`:  (string) * `last_name`:  (string) * `email`:  (string) * `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean) * `is_system_auditor`:  (boolean) * `password`: Field used to change the password. (string) * `ldap_dn`:  (string) * `last_login`:  (datetime) * `external_account`: Set if the account is managed by an external service (field)    ## Sorting  To specify that users are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=username  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-username  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=username,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/access_list/")
    @GeneratedMethod ("Inventories_inventories_access_list_list")
    public void inventoriesInventoriesAccessListList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Activity Streams for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of activity streams associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of activity streams found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more activity stream records.    ## Results  Each activity stream data structure includes the following fields:  * `id`: Database ID for this activity stream. (integer) * `type`: Data type for this activity stream. (choice) * `url`: URL for this activity stream. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `timestamp`:  (datetime) * `operation`: The action taken with respect to the given object(s). (choice)     - `create`: Entity Created     - `update`: Entity Updated     - `delete`: Entity Deleted     - `associate`: Entity Associated with another Entity     - `disassociate`: Entity was Disassociated with another Entity * `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json) * `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string) * `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string) * `object_association`: When present, shows the field name of the role or relationship that changed. (field) * `action_node`: The cluster node the activity took place on. (string) * `object_type`: When present, shows the model on which the role or relationship was defined. (field)    ## Sorting  To specify that activity streams are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/activity_stream/")
    @GeneratedMethod ("Inventories_inventories_activity_stream_list")
    public void inventoriesInventoriesActivityStreamList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create an Ad Hoc Command for an Inventory
     *
     *  Make a POST request to this resource with the following ad hoc command fields to create a new ad hoc command associated with this inventory.             * `execution_environment`: The container image to be used for execution. (id, default=``)           * `job_type`:  (choice)     - `run`: Run (default)     - `check`: Check  * `limit`:  (string, default=`\"\"`) * `credential`:  (id, default=``) * `module_name`:  (choice)     - `command` (default)     - `shell`     - `yum`     - `apt`     - `apt_key`     - `apt_repository`     - `apt_rpm`     - `service`     - `group`     - `user`     - `mount`     - `ping`     - `selinux`     - `setup`     - `win_ping`     - `win_service`     - `win_updates`     - `win_group`     - `win_user` * `module_args`:  (string, default=`\"\"`) * `forks`:  (integer, default=`0`) * `verbosity`:  (choice)     - `0`: 0 (Normal) (default)     - `1`: 1 (Verbose)     - `2`: 2 (More Verbose)     - `3`: 3 (Debug)     - `4`: 4 (Connection Debug)     - `5`: 5 (WinRM Debug) * `extra_vars`:  (string, default=`\"\"`) * `become_enabled`:  (boolean, default=`False`) * `diff_mode`:  (boolean, default=`False`)
     *
     */
    @POST
    @Path("/inventories/{id}/ad_hoc_commands/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_ad_hoc_commands_create")
    public void inventoriesInventoriesAdHocCommandsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        GroupsGroupsAdHocCommandsCreateRequest data
    );

    /**
     *  List Ad Hoc Commands for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of ad hoc commands associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of ad hoc commands found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more ad hoc command records.    ## Results  Each ad hoc command data structure includes the following fields:  * `id`: Database ID for this ad hoc command. (integer) * `type`: Data type for this ad hoc command. (choice) * `url`: URL for this ad hoc command. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this ad hoc command was created. (datetime) * `modified`: Timestamp when this ad hoc command was last modified. (datetime) * `name`: Name of this ad hoc command. (string) * `launch_type`:  (choice)     - `manual`: Manual     - `relaunch`: Relaunch     - `callback`: Callback     - `scheduled`: Scheduled     - `dependency`: Dependency     - `workflow`: Workflow     - `webhook`: Webhook     - `sync`: Sync     - `scm`: SCM Update * `status`:  (choice)     - `new`: New     - `pending`: Pending     - `waiting`: Waiting     - `running`: Running     - `successful`: Successful     - `failed`: Failed     - `error`: Error     - `canceled`: Canceled * `execution_environment`: The container image to be used for execution. (id) * `failed`:  (boolean) * `started`: The date and time the job was queued for starting. (datetime) * `finished`: The date and time the job finished execution. (datetime) * `canceled_on`: The date and time when the cancel request was sent. (datetime) * `elapsed`: Elapsed time in seconds that the job ran. (decimal) * `job_explanation`: A status field to indicate the state of the job if it wasn&#x27;t able to run and capture stdout (string) * `execution_node`: The node the job executed on. (string) * `controller_node`: The instance that managed the execution environment. (string) * `launched_by`:  (field) * `work_unit_id`: The Receptor work unit ID associated with this job. (string) * `job_type`:  (choice)     - `run`: Run     - `check`: Check * `inventory`:  (id) * `limit`:  (string) * `credential`:  (id) * `module_name`:  (choice)     - `command`     - `shell`     - `yum`     - `apt`     - `apt_key`     - `apt_repository`     - `apt_rpm`     - `service`     - `group`     - `user`     - `mount`     - `ping`     - `selinux`     - `setup`     - `win_ping`     - `win_service`     - `win_updates`     - `win_group`     - `win_user` * `module_args`:  (string) * `forks`:  (integer) * `verbosity`:  (choice)     - `0`: 0 (Normal)     - `1`: 1 (Verbose)     - `2`: 2 (More Verbose)     - `3`: 3 (Debug)     - `4`: 4 (Connection Debug)     - `5`: 5 (WinRM Debug) * `extra_vars`:  (string) * `become_enabled`:  (boolean) * `diff_mode`:  (boolean)    ## Sorting  To specify that ad hoc commands are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/ad_hoc_commands/")
    @GeneratedMethod ("Inventories_inventories_ad_hoc_commands_list")
    public void inventoriesInventoriesAdHocCommandsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    @POST
    @Path("/inventories/{id}/copy/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_copy_create")
    public void inventoriesInventoriesCopyCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        CredentialsCredentialsCopyCreateRequest data
    );

    @GET
    @Path("/inventories/{id}/copy/")
    @GeneratedMethod ("Inventories_inventories_copy_list")
    public void inventoriesInventoriesCopyList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create an Inventory
     *
     *  Make a POST request to this resource with the following inventory fields to create a new inventory:          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory. (default)     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`\"\"`) * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`)
     *
     */
    @POST
    @Path("/inventories/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_create")
    public void inventoriesInventoriesCreate(
        InventoriesInventoriesCreateRequest data
    );

    /**
     *  Delete an Inventory
     *
     *  Make a DELETE request to this resource to delete this inventory.
     *
     */
    @DELETE
    @Path("/inventories/{id}/")
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_delete")
    public void inventoriesInventoriesDelete(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create a Group for an Inventory
     *
     *  Make a POST request to this resource with the following group fields to create a new group associated with this inventory.          * `name`: Name of this group. (string, required) * `description`: Optional description of this group. (string, default=`\"\"`)  * `variables`: Group variables in JSON or YAML format. (json, default=``)         # Remove Inventory Groups:  Make a POST request to this resource with `id` and `disassociate` fields to delete the associated group.      {         \"id\": 123,         \"disassociate\": true     }
     *
     */
    @POST
    @Path("/inventories/{id}/groups/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_groups_create")
    public void inventoriesInventoriesGroupsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        Object data
    );

    /**
     *  List Groups for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of groups associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of groups found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more group records.    ## Results  Each group data structure includes the following fields:  * `id`: Database ID for this group. (integer) * `type`: Data type for this group. (choice) * `url`: URL for this group. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this group was created. (datetime) * `modified`: Timestamp when this group was last modified. (datetime) * `name`: Name of this group. (string) * `description`: Optional description of this group. (string) * `inventory`:  (id) * `variables`: Group variables in JSON or YAML format. (json)    ## Sorting  To specify that groups are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/groups/")
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_groups_list")
    public void inventoriesInventoriesGroupsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create a Host for an Inventory
     *
     *  Make a POST request to this resource with the following host fields to create a new host associated with this inventory.          * `name`: Name of this host. (string, required) * `description`: Optional description of this host. (string, default=`\"\"`)  * `enabled`: Is this host online and available for running jobs? (boolean, default=`True`) * `instance_id`: The value used by the remote inventory source to uniquely identify the host (string, default=`\"\"`) * `variables`: Host variables in JSON or YAML format. (json, default=``)              # Remove Inventory Hosts:  Make a POST request to this resource with `id` and `disassociate` fields to delete the associated host.      {         \"id\": 123,         \"disassociate\": true     }
     *
     */
    @POST
    @Path("/inventories/{id}/hosts/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_hosts_create")
    public void inventoriesInventoriesHostsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        GroupsGroupsHostsCreateRequest data
    );

    /**
     *  List Hosts for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of hosts associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of hosts found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more host records.    ## Results  Each host data structure includes the following fields:  * `id`: Database ID for this host. (integer) * `type`: Data type for this host. (choice) * `url`: URL for this host. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this host was created. (datetime) * `modified`: Timestamp when this host was last modified. (datetime) * `name`: Name of this host. (string) * `description`: Optional description of this host. (string) * `inventory`:  (id) * `enabled`: Is this host online and available for running jobs? (boolean) * `instance_id`: The value used by the remote inventory source to uniquely identify the host (string) * `variables`: Host variables in JSON or YAML format. (json) * `has_active_failures`:  (field) * `has_inventory_sources`:  (field) * `last_job`:  (id) * `last_job_host_summary`:  (id) * `ansible_facts_modified`: The date and time ansible_facts was last modified. (datetime)    ## Sorting  To specify that hosts are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/hosts/")
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_hosts_list")
    public void inventoriesInventoriesHostsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create an Inventory for an Inventory
     *
     *  Make a POST request to this resource with the following inventory fields to create a new inventory associated with this inventory.          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory. (default)     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`\"\"`) * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`)         # Add Inventories for an Inventory:  Make a POST request to this resource with only an `id` field to associate an existing inventory with this inventory.  # Remove Inventories from this Inventory:  Make a POST request to this resource with `id` and `disassociate` fields to remove the inventory from this inventory  without deleting the inventory.
     *
     */
    @POST
    @Path("/inventories/{id}/input_inventories/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_input_inventories_create")
    public void inventoriesInventoriesInputInventoriesCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        InventoriesInventoriesCreateRequest data
    );

    /**
     *  List Inventories for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of inventories associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of inventories found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more inventory records.    ## Results  Each inventory data structure includes the following fields:  * `id`: Database ID for this inventory. (integer) * `type`: Data type for this inventory. (choice) * `url`: URL for this inventory. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this inventory was created. (datetime) * `modified`: Timestamp when this inventory was last modified. (datetime) * `name`: Name of this inventory. (string) * `description`: Optional description of this inventory. (string) * `organization`: Organization containing this inventory. (id) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory.     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string) * `variables`: Inventory variables in JSON or YAML format. (json) * `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean) * `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer) * `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer) * `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer) * `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean) * `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer) * `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer) * `pending_deletion`: Flag indicating the inventory is being deleted. (boolean) * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean)    ## Sorting  To specify that inventories are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/input_inventories/")
    @GeneratedMethod ("Inventories_inventories_input_inventories_list")
    public void inventoriesInventoriesInputInventoriesList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create an Instance Group for an Inventory
     *
     *  Make a POST request to this resource with the following instance group fields to create a new instance group associated with this inventory.       * `name`: Name of this instance group. (string, required)       * `max_concurrent_jobs`: Maximum number of concurrent jobs to run on a group. When set to zero, no maximum is enforced. (integer, default=`0`) * `max_forks`: Maximum number of forks to execute concurrently on a group. When set to zero, no maximum is enforced. (integer, default=`0`)   * `is_container_group`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean, default=``) * `credential`:  (id, default=``) * `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer, default=`0`) * `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer, default=`0`) * `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json, default=``) * `pod_spec_override`:  (string, default=`\"\"`)          # Add Instance Groups for an Inventory:  Make a POST request to this resource with only an `id` field to associate an existing instance group with this inventory.  # Remove Instance Groups from this Inventory:  Make a POST request to this resource with `id` and `disassociate` fields to remove the instance group from this inventory  without deleting the instance group.
     *
     */
    @POST
    @Path("/inventories/{id}/instance_groups/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_instance_groups_create")
    public void inventoriesInventoriesInstanceGroupsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        Object data
    );

    /**
     *  List Instance Groups for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of instance groups associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of instance groups found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more instance group records.    ## Results  Each instance group data structure includes the following fields:  * `id`: Database ID for this instance group. (integer) * `type`: Data type for this instance group. (choice) * `url`: URL for this instance group. (string) * `related`: Data structure with URLs of related resources. (object) * `name`: Name of this instance group. (string) * `created`: Timestamp when this instance group was created. (datetime) * `modified`: Timestamp when this instance group was last modified. (datetime) * `capacity`:  (field) * `consumed_capacity`:  (field) * `percent_capacity_remaining`:  (field) * `jobs_running`:  (field) * `max_concurrent_jobs`: Maximum number of concurrent jobs to run on a group. When set to zero, no maximum is enforced. (integer) * `max_forks`: Maximum number of forks to execute concurrently on a group. When set to zero, no maximum is enforced. (integer) * `jobs_total`: Count of all jobs that target this instance group (integer) * `instances`:  (field) * `is_container_group`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean) * `credential`:  (id) * `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer) * `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer) * `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json) * `pod_spec_override`:  (string) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)    ## Sorting  To specify that instance groups are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/instance_groups/")
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_instance_groups_list")
    public void inventoriesInventoriesInstanceGroupsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create an Inventory Source for an Inventory
     *
     *  Make a POST request to this resource with the following inventory source fields to create a new inventory source associated with this inventory.          * `name`: Name of this inventory source. (string, required) * `description`: Optional description of this inventory source. (string, default=`\"\"`) * `source`:  (choice)     - `file`: File, Directory or Script     - `constructed`: Template additional groups and hostvars at runtime     - `scm`: Sourced from a Project     - `ec2`: Amazon EC2     - `gce`: Google Compute Engine     - `azure_rm`: Microsoft Azure Resource Manager     - `vmware`: VMware vCenter     - `satellite6`: Red Hat Satellite 6     - `openstack`: OpenStack     - `rhv`: Red Hat Virtualization     - `controller`: Red Hat Ansible Automation Platform     - `insights`: Red Hat Insights * `source_path`:  (string, default=`\"\"`) * `source_vars`: Inventory source variables in YAML or JSON format. (string, default=`\"\"`) * `scm_branch`: Inventory source SCM branch. Project default used if blank. Only allowed if project allow_override field is set to true. (string, default=`\"\"`) * `credential`: Cloud credential to use for inventory updates. (integer, default=`None`) * `enabled_var`: Retrieve the enabled state from the given dict of host variables. The enabled variable may be specified as &quot;foo.bar&quot;, in which case the lookup will traverse into nested dicts, equivalent to: from_dict.get(&quot;foo&quot;, {}).get(&quot;bar&quot;, default) (string, default=`\"\"`) * `enabled_value`: Only used when enabled_var is set. Value when the host is considered enabled. For example if enabled_var=&quot;status.power_state&quot;and enabled_value=&quot;powered_on&quot; with host variables:{   &quot;status&quot;: {     &quot;power_state&quot;: &quot;powered_on&quot;,     &quot;created&quot;: &quot;2018-02-01T08:00:00.000000Z:00&quot;,     &quot;healthy&quot;: true    },    &quot;name&quot;: &quot;foobar&quot;,    &quot;ip_address&quot;: &quot;192.168.2.1&quot;}The host would be marked enabled. If power_state where any value other than powered_on then the host would be disabled when imported. If the key is not found then the host will be enabled (string, default=`\"\"`) * `host_filter`: This field is deprecated and will be removed in a future release. Regex where only matching hosts will be imported. (string, default=`\"\"`) * `overwrite`: Overwrite local groups and hosts from remote inventory source. (boolean, default=`False`) * `overwrite_vars`: Overwrite local variables from remote inventory source. (boolean, default=`False`)  * `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer, default=`0`) * `verbosity`:  (choice)     - `0`: 0 (WARNING)     - `1`: 1 (INFO) (default)     - `2`: 2 (DEBUG) * `limit`: Enter host, group or pattern match (string, default=`\"\"`)     * `execution_environment`: The container image to be used for execution. (id, default=``)  * `update_on_launch`:  (boolean, default=`False`) * `update_cache_timeout`:  (integer, default=`0`) * `source_project`: Project containing inventory file used as source. (id, default=``)
     *
     */
    @POST
    @Path("/inventories/{id}/inventory_sources/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_inventory_sources_create")
    public void inventoriesInventoriesInventorySourcesCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        InventoriesInventoriesInventorySourcesCreateRequest data
    );

    /**
     *  List Inventory Sources for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of inventory sources associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of inventory sources found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more inventory source records.    ## Results  Each inventory source data structure includes the following fields:  * `id`: Database ID for this inventory source. (integer) * `type`: Data type for this inventory source. (choice) * `url`: URL for this inventory source. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this inventory source was created. (datetime) * `modified`: Timestamp when this inventory source was last modified. (datetime) * `name`: Name of this inventory source. (string) * `description`: Optional description of this inventory source. (string) * `source`:  (choice)     - `file`: File, Directory or Script     - `constructed`: Template additional groups and hostvars at runtime     - `scm`: Sourced from a Project     - `ec2`: Amazon EC2     - `gce`: Google Compute Engine     - `azure_rm`: Microsoft Azure Resource Manager     - `vmware`: VMware vCenter     - `satellite6`: Red Hat Satellite 6     - `openstack`: OpenStack     - `rhv`: Red Hat Virtualization     - `controller`: Red Hat Ansible Automation Platform     - `insights`: Red Hat Insights * `source_path`:  (string) * `source_vars`: Inventory source variables in YAML or JSON format. (string) * `scm_branch`: Inventory source SCM branch. Project default used if blank. Only allowed if project allow_override field is set to true. (string) * `credential`: Cloud credential to use for inventory updates. (integer) * `enabled_var`: Retrieve the enabled state from the given dict of host variables. The enabled variable may be specified as &quot;foo.bar&quot;, in which case the lookup will traverse into nested dicts, equivalent to: from_dict.get(&quot;foo&quot;, {}).get(&quot;bar&quot;, default) (string) * `enabled_value`: Only used when enabled_var is set. Value when the host is considered enabled. For example if enabled_var=&quot;status.power_state&quot;and enabled_value=&quot;powered_on&quot; with host variables:{   &quot;status&quot;: {     &quot;power_state&quot;: &quot;powered_on&quot;,     &quot;created&quot;: &quot;2018-02-01T08:00:00.000000Z:00&quot;,     &quot;healthy&quot;: true    },    &quot;name&quot;: &quot;foobar&quot;,    &quot;ip_address&quot;: &quot;192.168.2.1&quot;}The host would be marked enabled. If power_state where any value other than powered_on then the host would be disabled when imported. If the key is not found then the host will be enabled (string) * `host_filter`: This field is deprecated and will be removed in a future release. Regex where only matching hosts will be imported. (string) * `overwrite`: Overwrite local groups and hosts from remote inventory source. (boolean) * `overwrite_vars`: Overwrite local variables from remote inventory source. (boolean) * `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string) * `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer) * `verbosity`:  (choice)     - `0`: 0 (WARNING)     - `1`: 1 (INFO)     - `2`: 2 (DEBUG) * `limit`: Enter host, group or pattern match (string) * `last_job_run`:  (datetime) * `last_job_failed`:  (boolean) * `next_job_run`:  (datetime) * `status`:  (choice)     - `new`: New     - `pending`: Pending     - `waiting`: Waiting     - `running`: Running     - `successful`: Successful     - `failed`: Failed     - `error`: Error     - `canceled`: Canceled     - `never updated`: Never Updated     - `none`: No External Source * `execution_environment`: The container image to be used for execution. (id) * `inventory`:  (id) * `update_on_launch`:  (boolean) * `update_cache_timeout`:  (integer) * `source_project`: Project containing inventory file used as source. (id) * `last_update_failed`:  (boolean) * `last_updated`:  (datetime)    ## Sorting  To specify that inventory sources are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/inventory_sources/")
    @GeneratedMethod ("Inventories_inventories_inventory_sources_list")
    public void inventoriesInventoriesInventorySourcesList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Job Templates for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of job templates associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of job templates found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more job template records.    ## Results  Each job template data structure includes the following fields:  * `id`: Database ID for this job template. (integer) * `type`: Data type for this job template. (choice) * `url`: URL for this job template. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this job template was created. (datetime) * `modified`: Timestamp when this job template was last modified. (datetime) * `name`: Name of this job template. (string) * `description`: Optional description of this job template. (string) * `job_type`:  (choice)     - `run`: Run     - `check`: Check * `inventory`:  (id) * `project`:  (id) * `playbook`:  (string) * `scm_branch`: Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true. (string) * `forks`:  (integer) * `limit`:  (string) * `verbosity`:  (choice)     - `0`: 0 (Normal)     - `1`: 1 (Verbose)     - `2`: 2 (More Verbose)     - `3`: 3 (Debug)     - `4`: 4 (Connection Debug)     - `5`: 5 (WinRM Debug) * `extra_vars`:  (json) * `job_tags`:  (string) * `force_handlers`:  (boolean) * `skip_tags`:  (string) * `start_at_task`:  (string) * `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer) * `use_fact_cache`: If enabled, the service will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible. (boolean) * `organization`: The organization used to determine access to this template. (id) * `last_job_run`:  (datetime) * `last_job_failed`:  (boolean) * `next_job_run`:  (datetime) * `status`:  (choice)     - `new`: New     - `pending`: Pending     - `waiting`: Waiting     - `running`: Running     - `successful`: Successful     - `failed`: Failed     - `error`: Error     - `canceled`: Canceled     - `never updated`: Never Updated * `execution_environment`: The container image to be used for execution. (id) * `host_config_key`:  (string) * `ask_scm_branch_on_launch`:  (boolean) * `ask_diff_mode_on_launch`:  (boolean) * `ask_variables_on_launch`:  (boolean) * `ask_limit_on_launch`:  (boolean) * `ask_tags_on_launch`:  (boolean) * `ask_skip_tags_on_launch`:  (boolean) * `ask_job_type_on_launch`:  (boolean) * `ask_verbosity_on_launch`:  (boolean) * `ask_inventory_on_launch`:  (boolean) * `ask_credential_on_launch`:  (boolean) * `ask_execution_environment_on_launch`:  (boolean) * `ask_labels_on_launch`:  (boolean) * `ask_forks_on_launch`:  (boolean) * `ask_job_slice_count_on_launch`:  (boolean) * `ask_timeout_on_launch`:  (boolean) * `ask_instance_groups_on_launch`:  (boolean) * `survey_enabled`:  (boolean) * `become_enabled`:  (boolean) * `diff_mode`: If enabled, textual changes made to any templated files on the host are shown in the standard output (boolean) * `allow_simultaneous`:  (boolean) * `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string) * `job_slice_count`: The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1. (integer) * `webhook_service`: Service that webhook requests will be accepted from (choice)     - `\"\"`: ---------     - `github`: GitHub     - `gitlab`: GitLab * `webhook_credential`: Personal Access Token for posting back the status to the service API (id) * `prevent_instance_group_fallback`: If enabled, the job template will prevent adding any inventory or organization instance groups to the list of preferred instances groups to run on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean)    ## Sorting  To specify that job templates are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/job_templates/")
    @GeneratedMethod ("Inventories_inventories_job_templates_list")
    public void inventoriesInventoriesJobTemplatesList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create a Label for an Inventory
     *
     *  Make a POST request to this resource with the following label fields to create a new label associated with this inventory.          * `name`: Name of this label. (string, required) * `organization`: Organization this label belongs to. (id, required)         # Add Labels for an Inventory:  Make a POST request to this resource with only an `id` field to associate an existing label with this inventory.  # Remove Labels from this Inventory:  Make a POST request to this resource with `id` and `disassociate` fields to remove the label from this inventory .
     *
     */
    @POST
    @Path("/inventories/{id}/labels/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_labels_create")
    public void inventoriesInventoriesLabelsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        InventoriesInventoriesLabelsCreateRequest data
    );

    /**
     *  List Labels for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of labels associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of labels found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more label records.    ## Results  Each label data structure includes the following fields:  * `id`: Database ID for this label. (integer) * `type`: Data type for this label. (choice) * `url`: URL for this label. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this label was created. (datetime) * `modified`: Timestamp when this label was last modified. (datetime) * `name`: Name of this label. (string) * `organization`: Organization this label belongs to. (id)    ## Sorting  To specify that labels are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/labels/")
    @GeneratedMethod ("Inventories_inventories_labels_list")
    public void inventoriesInventoriesLabelsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Inventories
     *
     *  Make a GET request to this resource to retrieve the list of inventories.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of inventories found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more inventory records.    ## Results  Each inventory data structure includes the following fields:  * `id`: Database ID for this inventory. (integer) * `type`: Data type for this inventory. (choice) * `url`: URL for this inventory. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this inventory was created. (datetime) * `modified`: Timestamp when this inventory was last modified. (datetime) * `name`: Name of this inventory. (string) * `description`: Optional description of this inventory. (string) * `organization`: Organization containing this inventory. (id) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory.     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string) * `variables`: Inventory variables in JSON or YAML format. (json) * `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean) * `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer) * `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer) * `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer) * `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean) * `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer) * `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer) * `pending_deletion`: Flag indicating the inventory is being deleted. (boolean) * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean)    ## Sorting  To specify that inventories are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/")
    @GeneratedMethod ("Inventories_inventories_list")
    public void inventoriesInventoriesList(
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Roles for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of roles associated with the selected inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of roles found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more role records.    ## Results  Each role data structure includes the following fields:  * `id`: Database ID for this role. (integer) * `type`: Data type for this role. (choice) * `url`: URL for this role. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `name`: Name of this role. (field) * `description`: Optional description of this role. (field)    ## Sorting  To specify that roles are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/object_roles/")
    @GeneratedMethod ("Inventories_inventories_object_roles_list")
    public void inventoriesInventoriesObjectRolesList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update an Inventory
     *
     *  Make a PUT or PATCH request to this resource to update this inventory.  The following fields may be modified:          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory. (default)     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`\"\"`) * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`)         For a PATCH request, include only the fields that are being modified.
     *
     */
    @PATCH
    @Path("/inventories/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_partial_update")
    public void inventoriesInventoriesPartialUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InventoriesInventoriesPartialUpdateRequest data
    );

    /**
     *  Retrieve an Inventory
     *
     *  Make GET request to this resource to retrieve a single inventory record containing the following fields:  * `id`: Database ID for this inventory. (integer) * `type`: Data type for this inventory. (choice) * `url`: URL for this inventory. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this inventory was created. (datetime) * `modified`: Timestamp when this inventory was last modified. (datetime) * `name`: Name of this inventory. (string) * `description`: Optional description of this inventory. (string) * `organization`: Organization containing this inventory. (id) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory.     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string) * `variables`: Inventory variables in JSON or YAML format. (json) * `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean) * `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer) * `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer) * `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer) * `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean) * `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer) * `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer) * `pending_deletion`: Flag indicating the inventory is being deleted. (boolean) * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean)
     *
     */
    @GET
    @Path("/inventories/{id}/")
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_read")
    public void inventoriesInventoriesRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    @POST
    @Path("/inventories/{id}/root_groups/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_root_groups_create")
    public void inventoriesInventoriesRootGroupsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        GroupsGroupsCreateRequest data
    );

    /**
     *  List Root Groups for an Inventory
     *
     *  Make a GET request to this resource to retrieve a list of root (top-level) groups associated with this inventory.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of groups found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more group records.    ## Results  Each group data structure includes the following fields:  * `id`: Database ID for this group. (integer) * `type`: Data type for this group. (choice) * `url`: URL for this group. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this group was created. (datetime) * `modified`: Timestamp when this group was last modified. (datetime) * `name`: Name of this group. (string) * `description`: Optional description of this group. (string) * `inventory`:  (id) * `variables`: Group variables in JSON or YAML format. (json)    ## Sorting  To specify that groups are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/inventories/{id}/root_groups/")
    @GeneratedMethod ("Inventories_inventories_root_groups_list")
    public void inventoriesInventoriesRootGroupsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     * Generate inventory group and host data as needed for an inventory script.
     *
     *  Refer to [Dynamic Inventory](http://docs.ansible.com/intro_dynamic_inventory.html) for more information on inventory scripts.  ## List Response  Make a GET request to this resource without query parameters to retrieve a JSON object containing groups, including the hosts, children and variables for each group.  The response data is equivalent to that returned by passing the `--list` argument to an inventory script.  Specify a query string of `?hostvars=1` to retrieve the JSON object above including all host variables.  The `['_meta']['hostvars']` object in the response contains an entry for each host with its variables.  This response format can be used with Ansible 1.3 and later to avoid making a separate API request for each host.  Refer to [Tuning the External Inventory Script](http://docs.ansible.com/developing_inventory.html#tuning-the-external-inventory-script) for more information on this feature.  By default, the inventory script will only return hosts that are enabled in the inventory.  This feature allows disabled hosts to be skipped when running jobs without removing them from the inventory.  Specify a query string of `?all=1` to return all hosts, including disabled ones.  Specify a query string of `?towervars=1` to add variables to the hostvars of each host that specifies its enabled state and database ID.  Specify a query string of `?subset=slice2of5` to produce an inventory that has a restricted number of hosts according to the rules of job slicing.  To apply multiple query strings, join them with the `&` character, like `?hostvars=1&all=1`.  ## Host Response  Make a GET request to this resource with a query string similar to `?host=HOSTNAME` to retrieve a JSON object containing host variables for the specified host.  The response data is equivalent to that returned by passing the `--host HOSTNAME` argument to an inventory script.
     *
     */
    @GET
    @Path("/inventories/{id}/script/")
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_script_read")
    public void inventoriesInventoriesScriptRead(
        @GeneratedParam("id") @PathParam("id") String id
    );

    /**
     *  Group Tree for an Inventory
     *
     *  Make a GET request to this resource to retrieve a hierarchical view of groups associated with the selected inventory.  The resulting data structure contains a list of root groups, with each group also containing a list of its children.  ## Results  Each group data structure includes the following fields:  * `id`: Database ID for this group. (integer) * `type`: Data type for this group. (choice) * `url`: URL for this group. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this group was created. (datetime) * `modified`: Timestamp when this group was last modified. (datetime) * `name`: Name of this group. (string) * `description`: Optional description of this group. (string) * `inventory`:  (id) * `variables`: Group variables in JSON or YAML format. (json) * `children`:  (field)
     *
     */
    @GET
    @Path("/inventories/{id}/tree/")
    @GeneratedMethod ("Inventories_inventories_tree_read")
    public void inventoriesInventoriesTreeRead(
        @GeneratedParam("id") @PathParam("id") String id
    );

    /**
     *  Update an Inventory
     *
     *  Make a PUT or PATCH request to this resource to update this inventory.  The following fields may be modified:          * `name`: Name of this inventory. (string, required) * `description`: Optional description of this inventory. (string, default=`\"\"`) * `organization`: Organization containing this inventory. (id, required) * `kind`: Kind of inventory being represented. (choice)     - `\"\"`: Hosts have a direct link to this inventory. (default)     - `smart`: Hosts for inventory generated using the host_filter property.     - `constructed`: Parse list of source inventories with the constructed inventory plugin. * `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`\"\"`) * `variables`: Inventory variables in JSON or YAML format. (json, default=``)         * `prevent_instance_group_fallback`: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied. (boolean, default=`False`)       For a PUT request, include **all** fields in the request.
     *
     */
    @PUT
    @Path("/inventories/{id}/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Inventories_inventories_update")
    public void inventoriesInventoriesUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        Object data
    );

    /**
     *  Update Inventory Sources
     *
     *  Make a GET request to this resource to determine if any of the inventory sources for this inventory can be updated. The response will include the following fields for each inventory source:  * `inventory_source`: ID of the inventory_source   (integer, read-only) * `can_update`: Flag indicating if this inventory source can be updated   (boolean, read-only)  Make a POST request to this resource to update the inventory sources. The response status code will be a 202. The response will contain the follow fields for each of the individual inventory sources:  * `status`: `started` or message why the update could not be started.   (string, read-only) * `inventory_update`: ID of the inventory update job that was started.   (integer, read-only) * `project_update`: ID of the project update job that was started if this inventory source is an SCM source.   (integer, read-only, optional)
     *
     */
    @POST
    @Path("/inventories/{id}/update_inventory_sources/")
    @GeneratedMethod ("Inventories_inventories_update_inventory_sources_create")
    public void inventoriesInventoriesUpdateInventorySourcesCreate(
        @GeneratedParam("id") @PathParam("id") String id
    );

    /**
     *  Update Inventory Sources
     *
     *  Make a GET request to this resource to determine if any of the inventory sources for this inventory can be updated. The response will include the following fields for each inventory source:  * `inventory_source`: ID of the inventory_source   (integer, read-only) * `can_update`: Flag indicating if this inventory source can be updated   (boolean, read-only)  Make a POST request to this resource to update the inventory sources. The response status code will be a 202. The response will contain the follow fields for each of the individual inventory sources:  * `status`: `started` or message why the update could not be started.   (string, read-only) * `inventory_update`: ID of the inventory update job that was started.   (integer, read-only) * `project_update`: ID of the project update job that was started if this inventory source is an SCM source.   (integer, read-only, optional)
     *
     */
    @GET
    @Path("/inventories/{id}/update_inventory_sources/")
    @GeneratedMethod ("Inventories_inventories_update_inventory_sources_read")
    public void inventoriesInventoriesUpdateInventorySourcesRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update Inventory Variable Data
     *
     *  Make a PUT or PATCH request to this resource to update variables defined for a inventory.
     *
     */
    @PATCH
    @Path("/inventories/{id}/variable_data/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_variable_data_partial_update")
    public void inventoriesInventoriesVariableDataPartialUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InventoriesInventoriesVariableDataUpdateRequest data
    );

    /**
     *  Retrieve Inventory Variable Data
     *
     *  Make a GET request to this resource to retrieve all variables defined for a inventory.
     *
     */
    @GET
    @Path("/inventories/{id}/variable_data/")
    @GeneratedMethod ("Inventories_inventories_variable_data_read")
    public void inventoriesInventoriesVariableDataRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update Inventory Variable Data
     *
     *  Make a PUT or PATCH request to this resource to update variables defined for a inventory.
     *
     */
    @PUT
    @Path("/inventories/{id}/variable_data/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Inventories_inventories_variable_data_update")
    public void inventoriesInventoriesVariableDataUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InventoriesInventoriesVariableDataUpdateRequest data
    );

}
