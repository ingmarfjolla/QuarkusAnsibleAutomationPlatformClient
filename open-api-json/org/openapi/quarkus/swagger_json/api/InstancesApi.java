package org.openapi.quarkus.swagger_json.api;

import org.openapi.quarkus.swagger_json.model.InstancesInstancesUpdateRequest;

import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider; 
import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;
import org.openapi.quarkus.swagger_json.api.auth.CompositeAuthenticationProvider;
import org.openapi.quarkus.swagger_json.api.auth.AuthenticationPropagationHeadersFactory;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

import jakarta.enterprise.context.ApplicationScoped;

import io.quarkiverse.openapi.generator.annotations.GeneratedClass;
import io.quarkiverse.openapi.generator.annotations.GeneratedMethod;
import io.quarkiverse.openapi.generator.annotations.GeneratedParam;

/**
  * Ansible Automation Platform controller API
  * <p/>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  */
@Path("/api/v2/instances")
@RegisterRestClient(baseUri="https://null/", configKey="swagger_json")
@GeneratedClass(value="swagger.json", tag = "Instances")
@RegisterProvider(CompositeAuthenticationProvider.class)
@RegisterClientHeaders(AuthenticationPropagationHeadersFactory.class)
@ApplicationScoped
public interface InstancesApi {

    /**
     *  Create an Instance
     *
     *  Make a POST request to this resource with the following instance fields to create a new instance:    * `hostname`:  (string, required)             * `capacity_adjustment`:  (decimal, default=`1`)           * `enabled`:  (boolean, default=`True`) * `managed_by_policy`:  (boolean, default=`True`) * `node_type`: Role that this node plays in the mesh. (choice)     - `control`: Control plane node     - `execution`: Execution plane node (default)     - `hybrid`: Controller and execution     - `hop`: Message-passing node, no execution capability * `node_state`: Indicates the current life cycle stage of this instance. (choice)     - `provisioning`: Provisioning     - `provision-fail`: Provisioning Failure     - `installed`: Installed (default)     - `ready`: Ready     - `unavailable`: Unavailable     - `deprovisioning`: De-provisioning     - `deprovision-fail`: De-provisioning Failure  * `listener_port`: Port that Receptor will listen for incoming connections on. (integer, default=`27199`)
     *
     */
    @POST
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Instances_instances_create")
    public void instancesInstancesCreate(
        Object data
    );

    /**
     *  Manually Initiate a Health Check
     *
     * For purposes of error remediation or debugging, a health check can be manually initiated by making a POST request to this endpoint.  This will submit the work unit to the target node through the receptor mesh and wait for it to finish. The model will be updated with the result. Up-to-date values of the fields will be returned in the response data.
     *
     */
    @POST
    @Path("/{id}/health_check/")
    @Produces({"application/json"})
    @GeneratedMethod ("Instances_instances_health_check_create")
    public void instancesInstancesHealthCheckCreate(
        @GeneratedParam("id") @PathParam("id") String id
    );

    /**
     *  Health Check Data
     *
     *  Health checks are used to obtain important data about an instance. Instance fields affected by the health check are shown in this view. Fundamentally, health checks require running code on the machine in question.   - For instances with `node_type` of \"control\" or \"hybrid\", health checks are performed as part of a periodic task that runs in the background.  - For instances with `node_type` of \"execution\", health checks are done by submitting a work unit through the receptor mesh.  If ran through the receptor mesh, the invoked command is:  ``` ansible-runner worker --worker-info ```  For execution nodes, these checks are _not_ performed on a regular basis. Health checks against functional nodes will be ran when the node is first discovered. Health checks against nodes with errors will be repeated at a reduced frequency.
     *
     */
    @GET
    @Path("/{id}/health_check/")
    @Produces({"application/json"})
    @GeneratedMethod ("Instances_instances_health_check_list")
    public void instancesInstancesHealthCheckList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    @GET
    @Path("/{id}/install_bundle/")
    @GeneratedMethod ("Instances_instances_install_bundle_list")
    public void instancesInstancesInstallBundleList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Create an Instance Group for an Instance
     *
     *  Make a POST request to this resource with the following instance group fields to create a new instance group associated with this instance.       * `name`: Name of this instance group. (string, required)       * `max_concurrent_jobs`: Maximum number of concurrent jobs to run on a group. When set to zero, no maximum is enforced. (integer, default=`0`) * `max_forks`: Maximum number of forks to execute concurrently on a group. When set to zero, no maximum is enforced. (integer, default=`0`)   * `is_container_group`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean, default=``) * `credential`:  (id, default=``) * `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer, default=`0`) * `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer, default=`0`) * `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json, default=``) * `pod_spec_override`:  (string, default=`\"\"`)          # Add Instance Groups for an Instance:  Make a POST request to this resource with only an `id` field to associate an existing instance group with this instance.  # Remove Instance Groups from this Instance:  Make a POST request to this resource with `id` and `disassociate` fields to remove the instance group from this instance  without deleting the instance group.
     *
     */
    @POST
    @Path("/{id}/instance_groups/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Instances_instances_instance_groups_create")
    public void instancesInstancesInstanceGroupsCreate(
        @GeneratedParam("id") @PathParam("id") String id, 
        Object data
    );

    /**
     *  List Instance Groups for an Instance
     *
     *  Make a GET request to this resource to retrieve a list of instance groups associated with the selected instance.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of instance groups found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more instance group records.    ## Results  Each instance group data structure includes the following fields:  * `id`: Database ID for this instance group. (integer) * `type`: Data type for this instance group. (choice) * `url`: URL for this instance group. (string) * `related`: Data structure with URLs of related resources. (object) * `name`: Name of this instance group. (string) * `created`: Timestamp when this instance group was created. (datetime) * `modified`: Timestamp when this instance group was last modified. (datetime) * `capacity`:  (field) * `consumed_capacity`:  (field) * `percent_capacity_remaining`:  (field) * `jobs_running`:  (field) * `max_concurrent_jobs`: Maximum number of concurrent jobs to run on a group. When set to zero, no maximum is enforced. (integer) * `max_forks`: Maximum number of forks to execute concurrently on a group. When set to zero, no maximum is enforced. (integer) * `jobs_total`: Count of all jobs that target this instance group (integer) * `instances`:  (field) * `is_container_group`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean) * `credential`:  (id) * `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer) * `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer) * `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json) * `pod_spec_override`:  (string) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)    ## Sorting  To specify that instance groups are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/{id}/instance_groups/")
    @GeneratedMethod ("Instances_instances_instance_groups_list")
    public void instancesInstancesInstanceGroupsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Unified Jobs for an Instance
     *
     *  Make a GET request to this resource to retrieve a list of unified jobs associated with the selected instance.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of unified jobs found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more unified job records.    ## Results  Each unified job data structure includes the following fields:  * `id`: Database ID for this unified job. (integer) * `type`: Data type for this unified job. (choice) * `url`: URL for this unified job. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `created`: Timestamp when this unified job was created. (datetime) * `modified`: Timestamp when this unified job was last modified. (datetime) * `name`: Name of this unified job. (string) * `description`: Optional description of this unified job. (string) * `unified_job_template`:  (id) * `launch_type`:  (choice)     - `manual`: Manual     - `relaunch`: Relaunch     - `callback`: Callback     - `scheduled`: Scheduled     - `dependency`: Dependency     - `workflow`: Workflow     - `webhook`: Webhook     - `sync`: Sync     - `scm`: SCM Update * `status`:  (choice)     - `new`: New     - `pending`: Pending     - `waiting`: Waiting     - `running`: Running     - `successful`: Successful     - `failed`: Failed     - `error`: Error     - `canceled`: Canceled * `execution_environment`: The container image to be used for execution. (id) * `failed`:  (boolean) * `started`: The date and time the job was queued for starting. (datetime) * `finished`: The date and time the job finished execution. (datetime) * `canceled_on`: The date and time when the cancel request was sent. (datetime) * `elapsed`: Elapsed time in seconds that the job ran. (decimal) * `job_explanation`: A status field to indicate the state of the job if it wasn&#x27;t able to run and capture stdout (string) * `execution_node`: The node the job executed on. (string) * `controller_node`: The instance that managed the execution environment. (string) * `launched_by`:  (field) * `work_unit_id`: The Receptor work unit ID associated with this job. (string)    ## Sorting  To specify that unified jobs are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/{id}/jobs/")
    @GeneratedMethod ("Instances_instances_jobs_list")
    public void instancesInstancesJobsList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  List Instances
     *
     *  Make a GET request to this resource to retrieve the list of instances.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of instances found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more instance records.    ## Results  Each instance data structure includes the following fields:  * `id`: Database ID for this instance. (integer) * `hostname`:  (string) * `type`: Data type for this instance. (choice) * `url`: URL for this instance. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `uuid`:  (string) * `created`: Timestamp when this instance was created. (datetime) * `modified`: Timestamp when this instance was last modified. (datetime) * `last_seen`: Last time instance ran its heartbeat task for main cluster nodes. Last known connection to receptor mesh for execution nodes. (datetime) * `health_check_started`: The last time a health check was initiated on this instance. (datetime) * `health_check_pending`:  (field) * `last_health_check`: Last time a health check was ran on this instance to refresh cpu, memory, and capacity. (datetime) * `errors`: Any error details from the last health check. (string) * `capacity_adjustment`:  (decimal) * `version`:  (string) * `capacity`:  (integer) * `consumed_capacity`:  (field) * `percent_capacity_remaining`:  (field) * `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance (integer) * `jobs_total`: Count of all jobs that target this instance (integer) * `cpu`:  (decimal) * `memory`: Total system memory of this instance in bytes. (integer) * `cpu_capacity`:  (integer) * `mem_capacity`:  (integer) * `enabled`:  (boolean) * `managed_by_policy`:  (boolean) * `node_type`: Role that this node plays in the mesh. (choice)     - `control`: Control plane node     - `execution`: Execution plane node     - `hybrid`: Controller and execution     - `hop`: Message-passing node, no execution capability * `node_state`: Indicates the current life cycle stage of this instance. (choice)     - `provisioning`: Provisioning     - `provision-fail`: Provisioning Failure     - `installed`: Installed     - `ready`: Ready     - `unavailable`: Unavailable     - `deprovisioning`: De-provisioning     - `deprovision-fail`: De-provisioning Failure * `ip_address`:  (string) * `listener_port`: Port that Receptor will listen for incoming connections on. (integer)    ## Sorting  To specify that instances are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @GeneratedMethod ("Instances_instances_list")
    public void instancesInstancesList(
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update an Instance
     *
     *  Make a PUT or PATCH request to this resource to update this instance.  The following fields may be modified:    * `hostname`:  (string, required)             * `capacity_adjustment`:  (decimal, default=`1`)           * `enabled`:  (boolean, default=`True`) * `managed_by_policy`:  (boolean, default=`True`) * `node_type`: Role that this node plays in the mesh. (choice)     - `control`: Control plane node     - `execution`: Execution plane node (default)     - `hybrid`: Controller and execution     - `hop`: Message-passing node, no execution capability * `node_state`: Indicates the current life cycle stage of this instance. (choice)     - `provisioning`: Provisioning     - `provision-fail`: Provisioning Failure     - `installed`: Installed (default)     - `ready`: Ready     - `unavailable`: Unavailable     - `deprovisioning`: De-provisioning     - `deprovision-fail`: De-provisioning Failure  * `listener_port`: Port that Receptor will listen for incoming connections on. (integer, default=`27199`)         For a PATCH request, include only the fields that are being modified.
     *
     */
    @PATCH
    @Path("/{id}/")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    @GeneratedMethod ("Instances_instances_partial_update")
    public void instancesInstancesPartialUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        Object data
    );

    /**
     *  List Instances for an Instance
     *
     *  Make a GET request to this resource to retrieve a list of instances associated with the selected instance.  The resulting data structure contains:      {         \"count\": 99,         \"next\": null,         \"previous\": null,         \"results\": [             ...         ]     }  The `count` field indicates the total number of instances found for the given query.  The `next` and `previous` fields provides links to additional results if there are more than will fit on a single page.  The `results` list contains zero or more instance records.    ## Results  Each instance data structure includes the following fields:  * `id`: Database ID for this instance. (integer) * `hostname`:  (string) * `type`: Data type for this instance. (choice) * `url`: URL for this instance. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `uuid`:  (string) * `created`: Timestamp when this instance was created. (datetime) * `modified`: Timestamp when this instance was last modified. (datetime) * `last_seen`: Last time instance ran its heartbeat task for main cluster nodes. Last known connection to receptor mesh for execution nodes. (datetime) * `health_check_started`: The last time a health check was initiated on this instance. (datetime) * `health_check_pending`:  (field) * `last_health_check`: Last time a health check was ran on this instance to refresh cpu, memory, and capacity. (datetime) * `errors`: Any error details from the last health check. (string) * `capacity_adjustment`:  (decimal) * `version`:  (string) * `capacity`:  (integer) * `consumed_capacity`:  (field) * `percent_capacity_remaining`:  (field) * `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance (integer) * `jobs_total`: Count of all jobs that target this instance (integer) * `cpu`:  (decimal) * `memory`: Total system memory of this instance in bytes. (integer) * `cpu_capacity`:  (integer) * `mem_capacity`:  (integer) * `enabled`:  (boolean) * `managed_by_policy`:  (boolean) * `node_type`: Role that this node plays in the mesh. (choice)     - `control`: Control plane node     - `execution`: Execution plane node     - `hybrid`: Controller and execution     - `hop`: Message-passing node, no execution capability * `node_state`: Indicates the current life cycle stage of this instance. (choice)     - `provisioning`: Provisioning     - `provision-fail`: Provisioning Failure     - `installed`: Installed     - `ready`: Ready     - `unavailable`: Unavailable     - `deprovisioning`: De-provisioning     - `deprovision-fail`: De-provisioning Failure * `ip_address`:  (string) * `listener_port`: Port that Receptor will listen for incoming connections on. (integer)    ## Sorting  To specify that instances are returned in a particular order, use the `order_by` query string parameter on the GET request.      ?order_by=name  Prefix the field name with a dash `-` to sort in reverse:      ?order_by=-name  Multiple sorting fields may be specified by separating the field names with a comma `,`:      ?order_by=name,some_other_field  ## Pagination  Use the `page_size` query string parameter to change the number of results returned for each request.  Use the `page` query string parameter to retrieve a particular page of results.      ?page_size=100&page=2  The `previous` and `next` links returned with the results will set these query string parameters automatically.  ## Searching  Use the `search` query string parameter to perform a case-insensitive search within all designated text fields of a model.      ?search=findme  (_Added in Ansible Tower 3.1.0_) Search across related fields:      ?related__search=findme
     *
     */
    @GET
    @Path("/{id}/peers/")
    @GeneratedMethod ("Instances_instances_peers_list")
    public void instancesInstancesPeersList(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("page") @QueryParam("page") Integer page, 
        @GeneratedParam("page_size") @QueryParam("page_size") Integer pageSize, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Retrieve an Instance
     *
     *  Make GET request to this resource to retrieve a single instance record containing the following fields:  * `id`: Database ID for this instance. (integer) * `hostname`:  (string) * `type`: Data type for this instance. (choice) * `url`: URL for this instance. (string) * `related`: Data structure with URLs of related resources. (object) * `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object) * `uuid`:  (string) * `created`: Timestamp when this instance was created. (datetime) * `modified`: Timestamp when this instance was last modified. (datetime) * `last_seen`: Last time instance ran its heartbeat task for main cluster nodes. Last known connection to receptor mesh for execution nodes. (datetime) * `health_check_started`: The last time a health check was initiated on this instance. (datetime) * `health_check_pending`:  (field) * `last_health_check`: Last time a health check was ran on this instance to refresh cpu, memory, and capacity. (datetime) * `errors`: Any error details from the last health check. (string) * `capacity_adjustment`:  (decimal) * `version`:  (string) * `capacity`:  (integer) * `consumed_capacity`:  (field) * `percent_capacity_remaining`:  (field) * `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance (integer) * `jobs_total`: Count of all jobs that target this instance (integer) * `cpu`:  (decimal) * `memory`: Total system memory of this instance in bytes. (integer) * `cpu_capacity`:  (integer) * `mem_capacity`:  (integer) * `enabled`:  (boolean) * `managed_by_policy`:  (boolean) * `node_type`: Role that this node plays in the mesh. (choice)     - `control`: Control plane node     - `execution`: Execution plane node     - `hybrid`: Controller and execution     - `hop`: Message-passing node, no execution capability * `node_state`: Indicates the current life cycle stage of this instance. (choice)     - `provisioning`: Provisioning     - `provision-fail`: Provisioning Failure     - `installed`: Installed     - `ready`: Ready     - `unavailable`: Unavailable     - `deprovisioning`: De-provisioning     - `deprovision-fail`: De-provisioning Failure * `ip_address`:  (string) * `listener_port`: Port that Receptor will listen for incoming connections on. (integer)
     *
     */
    @GET
    @Path("/{id}/")
    @GeneratedMethod ("Instances_instances_read")
    public void instancesInstancesRead(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search
    );

    /**
     *  Update an Instance
     *
     *  Make a PUT or PATCH request to this resource to update this instance.  The following fields may be modified:    * `hostname`:  (string, required)             * `capacity_adjustment`:  (decimal, default=`1`)           * `enabled`:  (boolean, default=`True`) * `managed_by_policy`:  (boolean, default=`True`) * `node_type`: Role that this node plays in the mesh. (choice)     - `control`: Control plane node     - `execution`: Execution plane node (default)     - `hybrid`: Controller and execution     - `hop`: Message-passing node, no execution capability * `node_state`: Indicates the current life cycle stage of this instance. (choice)     - `provisioning`: Provisioning     - `provision-fail`: Provisioning Failure     - `installed`: Installed (default)     - `ready`: Ready     - `unavailable`: Unavailable     - `deprovisioning`: De-provisioning     - `deprovision-fail`: De-provisioning Failure  * `listener_port`: Port that Receptor will listen for incoming connections on. (integer, default=`27199`)       For a PUT request, include **all** fields in the request.
     *
     */
    @PUT
    @Path("/{id}/")
    @Consumes({"application/json"})
    @GeneratedMethod ("Instances_instances_update")
    public void instancesInstancesUpdate(
        @GeneratedParam("id") @PathParam("id") String id, 
        @GeneratedParam("search") @QueryParam("search") String search, 
        InstancesInstancesUpdateRequest data
    );

}
